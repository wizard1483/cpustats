apply plugin: 'com.android.application'

android {
    //noinspection GroovyAssignabilityCheck
    signingConfigs {
        myConfig
    }

    compileSdkVersion rootProject.ext.compileSdkVersion as Integer
    buildToolsVersion rootProject.ext.buildToolsVersion as String

    defaultConfig {
        applicationId 'jp.takke.cpustats'
        targetSdkVersion rootProject.ext.targetSdkVersion as Integer
        minSdkVersion rootProject.ext.minSdkVersion as Integer
        versionCode rootProject.ext.versionCode as Integer
        versionName rootProject.ext.versionName as String
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.myConfig
        }
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name.equals("release")) {

            variant.outputs.each { output ->
                if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                    def file = output.outputFile
                    def shortVersionName = defaultConfig.versionName.replaceAll('\\.', '')
                    def d = new java.text.SimpleDateFormat("yyyyMMdd_HHmm").format(new Date())
                    def newName = "CpuStats_r${defaultConfig.versionCode}_${shortVersionName}_${d}.apk"
                    output.outputFile = new File(file.parent, newName)
                }
            }
        }
    }

    productFlavors {
        quad3 {
        }
        quad5 {
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:support-v4:${supportLibraryVersion}"

    testCompile "org.robolectric:robolectric:${robolectricVersion}"
    testCompile 'junit:junit:4.12'
    testCompile 'org.apache.maven:maven-ant-tasks:2.1.3'
}

// load signing settings from gradle.properties
if (project.hasProperty('storeFile')) {
    android.signingConfigs.myConfig.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.myConfig.storePassword = storePassword
}
if (project.hasProperty('keyAlias')) {
    android.signingConfigs.myConfig.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.myConfig.keyPassword = keyPassword
}